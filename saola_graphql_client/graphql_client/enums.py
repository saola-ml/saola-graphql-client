# Generated by ariadne-codegen
# Source: https://app.saola.sg/v1/graphql

from enum import Enum


class agents_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    integration_id = "integration_id"
    name = "name"
    persona = "persona"
    prompt_id = "prompt_id"
    updated_at = "updated_at"
    user_id = "user_id"
    workspace_id = "workspace_id"


class authRefreshTokenTypes_enum(str, Enum):
    pat = "pat"
    regular = "regular"


class authRefreshTokens_select_column(str, Enum):
    createdAt = "createdAt"
    expiresAt = "expiresAt"
    id = "id"
    metadata = "metadata"
    type = "type"
    userId = "userId"


class chat_statuses_enum(str, Enum):
    closed = "closed"
    escalated = "escalated"
    failed = "failed"
    new = "new"
    pending = "pending"
    waiting_for_assistant = "waiting_for_assistant"
    waiting_for_user = "waiting_for_user"


class chats_select_column(str, Enum):
    channel_id = "channel_id"
    contact_id = "contact_id"
    created_at = "created_at"
    id = "id"
    last_message_at = "last_message_at"
    messages = "messages"
    platform_id = "platform_id"
    source_id = "source_id"
    status = "status"
    updated_at = "updated_at"
    workspace_id = "workspace_id"


class connections_constraint(str, Enum):
    connections_pkey = "connections_pkey"
    connections_source_id_destination_id_workspace_id_key = (
        "connections_source_id_destination_id_workspace_id_key"
    )


class connections_select_column(str, Enum):
    active = "active"
    config = "config"
    created_at = "created_at"
    destination_id = "destination_id"
    id = "id"
    source_id = "source_id"
    state = "state"
    status = "status"
    updated_at = "updated_at"
    user_id = "user_id"
    workspace_id = "workspace_id"


class connections_select_column_connections_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    active = "active"


class connections_select_column_connections_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    active = "active"


class connections_update_column(str, Enum):
    _PLACEHOLDER = "_PLACEHOLDER"


class crm_record_types_enum(str, Enum):
    akb_collection = "akb_collection"
    chat = "chat"
    contact = "contact"
    lead = "lead"
    note = "note"
    query_database = "query_database"
    task = "task"


class crm_records_select_column(str, Enum):
    attributes = "attributes"
    chat_id = "chat_id"
    created_at = "created_at"
    id = "id"
    source_id = "source_id"
    type = "type"
    updated_at = "updated_at"


class cursor_ordering(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class destinations_select_column(str, Enum):
    id = "id"


class environments_enum(str, Enum):
    development = "development"
    production = "production"
    staging = "staging"


class handler_names_enum(str, Enum):
    process_chats = "process_chats"


class handlers_select_column(str, Enum):
    connection_id = "connection_id"
    created_at = "created_at"
    id = "id"
    name = "name"
    params = "params"
    sequence = "sequence"
    updated_at = "updated_at"


class integration_types_enum(str, Enum):
    openai = "openai"


class integrations_select_column(str, Enum):
    config = "config"
    created_at = "created_at"
    id = "id"
    name = "name"
    type = "type"
    updated_at = "updated_at"
    user_id = "user_id"
    workspace_id = "workspace_id"


class oauth_apps_select_column(str, Enum):
    callback_url = "callback_url"
    client_id = "client_id"
    created_at = "created_at"
    environment = "environment"
    id = "id"
    logo_url = "logo_url"
    name = "name"
    type = "type"
    updated_at = "updated_at"


class order_by(str, Enum):
    asc = "asc"
    asc_nulls_first = "asc_nulls_first"
    asc_nulls_last = "asc_nulls_last"
    desc = "desc"
    desc_nulls_first = "desc_nulls_first"
    desc_nulls_last = "desc_nulls_last"


class prompt_versions_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    prompt_id = "prompt_id"
    script = "script"
    updated_at = "updated_at"
    user_id = "user_id"


class prompts_select_column(str, Enum):
    created_at = "created_at"
    description = "description"
    id = "id"
    name = "name"
    updated_at = "updated_at"
    workspace_id = "workspace_id"


class source_types_enum(str, Enum):
    amocrm = "amocrm"
    bird = "bird"
    kommo = "kommo"
    postgres = "postgres"


class sources_constraint(str, Enum):
    sources_pkey = "sources_pkey"
    sources_workspace_id_type_key = "sources_workspace_id_type_key"


class sources_select_column(str, Enum):
    config = "config"
    created_at = "created_at"
    id = "id"
    name = "name"
    oauth_app_id = "oauth_app_id"
    type = "type"
    updated_at = "updated_at"
    user_id = "user_id"
    workspace_id = "workspace_id"


class sources_update_column(str, Enum):
    config = "config"


class statuses_enum(str, Enum):
    failed = "failed"
    new = "new"
    pending = "pending"
    ready = "ready"


class tool_names_enum(str, Enum):
    create_lead_note = "create_lead_note"
    create_lead_task = "create_lead_task"
    query_database = "query_database"
    send_template = "send_template"
    upsert_lead = "upsert_lead"


class tools_select_column(str, Enum):
    config = "config"
    connection_id = "connection_id"
    created_at = "created_at"
    description = "description"
    id = "id"
    name = "name"
    prompt_id = "prompt_id"
    properties = "properties"
    required = "required"
    updated_at = "updated_at"


class user_workspaces_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    role = "role"
    updated_at = "updated_at"
    user_id = "user_id"
    workspace_id = "workspace_id"


class users_select_column(str, Enum):
    createdAt = "createdAt"
    displayName = "displayName"
    email = "email"
    id = "id"
    updatedAt = "updatedAt"


class workspace_roles_enum(str, Enum):
    admin = "admin"
    member = "member"
    owner = "owner"


class workspaces_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"
    user_id = "user_id"
